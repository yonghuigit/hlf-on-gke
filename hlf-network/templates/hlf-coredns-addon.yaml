apiVersion: v1
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system
data:
  Corefile: |
    .:53 {
      errors
      health
      prometheus :9153
      {{- range $i, $org := $.Values.OrdererOrgs }}
      {{- range $i, $host := $org.Specs }}
      rewrite name {{ $host.Hostname | lower }}.{{ $org.Domain | lower }} {{ $org.Name | lower }}{{ $host.Hostname | lower }}.{{ $org.Name | lower }}.{{ $.Values.hlfNetworkNamespace }}.svc.cluster.local
      {{- end }} {{- /* org.Specs */ -}}
      {{- end }} {{- /* OrdererOrgs */ -}}{{""}}
      {{- range $i, $org := $.Values.PeerOrgs }}
      {{- range $i, $host := $org.Specs }}
      rewrite name {{ $host.Hostname | lower }}.{{ $org.Domain | lower }} {{ $org.Name | lower }}{{ $host.Hostname | lower }}.{{ $org.Name | lower }}.{{ $.Values.hlfNetworkNamespace }}.svc.cluster.local
      {{- end }} {{- /* org.Specs */ -}}
      {{- end }} {{- /* PeerOrgs */ -}}{{""}}
      cache 30
      loop
      reload
      forward . {{$.Values.hlfKubeDNSSvcIP}}
    }

---
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: internal-dns
  namespace: kube-system
  labels:
    k8s-app: internal-dns
    kubernetes.io/name: "CoreDNS"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      k8s-app: internal-dns
  template:
    metadata:
      labels:
        k8s-app: internal-dns
    spec:
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
        - key: "CriticalAddonsOnly"
          operator: "Exists"
      containers:
      - name: coredns
        image: coredns/coredns:{{ $.Values.coreDNSVersion }}
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        args: [ "-conf", "/etc/coredns/Corefile" ]
        volumeMounts:
        - name: config-volume
          mountPath: /etc/coredns
          readOnly: true
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
      dnsPolicy: Default
      volumes:
        - name: config-volume
          configMap:
            name: coredns
            items:
            - key: Corefile
              path: Corefile
---
apiVersion: v1
kind: Service
metadata:
  name: internal-dns
  namespace: kube-system
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    k8s-app: internal-dns
    kubernetes.io/name: "CoreDNS"
spec:
  selector:
    k8s-app: internal-dns
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP

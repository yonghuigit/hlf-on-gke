{{/* Secrets Template for Orderer/Peer Nodes. Expect currOrg, currHlfNodeType and global to be passed in  */}}
{{- define "hlf-network.secrets" }}

{{- $org := .currOrg }}
{{- $hlfNodeType := .currHlfNodeType }}
{{- $ := .global }}

{{- range $i, $host := $org.Specs }}
{{- $commonName := printf "%s.%s" $host.Hostname $org.Domain }}
{{- $mspPath := printf "crypto-config/%sOrganizations/%s/%ss/%s/msp" $hlfNodeType $org.Domain $hlfNodeType $commonName }}
{{- $tlsPath := printf "crypto-config/%sOrganizations/%s/%ss/%s/tls" $hlfNodeType $org.Domain $hlfNodeType $commonName }}
{{- $orgAdminCertPath := printf "crypto-config/%sOrganizations/%s/users/Admin@%s/msp/signcerts/Admin@%s-cert.pem" $hlfNodeType $org.Domain $org.Domain $org.Domain }}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: hlf-{{ $hlfNodeType }}--{{ $org.Name | lower }}--{{ $host.Hostname | lower }}-msp
  namespace: {{ $.Values.hlfNetworkNamespace }}
  labels:
    orgName: {{ $org.Name }}
    commonName: {{ $commonName }}
data:
  config.yaml: |-
      {{ $.Files.Get (printf "%s/config.yaml" $mspPath) | b64enc }}
  cert.pem: |-
      {{ $.Files.Get (printf "%s/signcerts/%s-cert.pem" $mspPath $commonName ) | b64enc }}
  cacert.pem: |-
      {{ $.Files.Get (printf "%s/cacerts/ca.%s-cert.pem" $mspPath $org.Domain) | b64enc }}
  tlscacert.pem: |-
      {{ $.Files.Get (printf "%s/tlscacerts/tlsca.%s-cert.pem" $mspPath $org.Domain ) | b64enc }}
  {{- range $path, $bytes := $.Files.Glob (printf "%s/keystore/*" $mspPath ) }}
  key.pem: |-
      {{ $.Files.Get $path | b64enc }}
  {{- end }}
  admincert.pem: |-
      {{ $.Files.Get $orgAdminCertPath | b64enc }}
---

---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: hlf-{{ $hlfNodeType }}--{{ $org.Name | lower }}--{{ $host.Hostname | lower }}-tls
  namespace: {{ $.Values.hlfNetworkNamespace }}
  labels:
    orgName: {{ $org.Name }}
    commonName: {{ $commonName }}
data:
  {{ ($.Files.Glob (printf "%s/*" $tlsPath)).AsSecrets | nindent 2 }}
---

{{- end }} {{- /* org.Specs */ -}}
{{- end }}
